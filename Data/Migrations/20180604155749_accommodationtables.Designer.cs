// <auto-generated />
using System;
using Data.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(EasyHotelDbContext))]
    [Migration("20180604155749_accommodationtables")]
    partial class accommodationtables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Core.Model.Accommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckIn");

                    b.Property<DateTime>("CheckOut");

                    b.Property<DateTime>("Created");

                    b.Property<int>("GuestNumber");

                    b.Property<DateTime>("Modified");

                    b.Property<int>("RoomId");

                    b.Property<decimal>("RoomRate");

                    b.Property<decimal?>("TotalBill");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("Data.Core.Model.Bed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccommodationId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("Data.Core.Model.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<DateTime>("Created");

                    b.Property<string>("DsComplemento");

                    b.Property<DateTime?>("DtNascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(30);

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<int>("Numero");

                    b.Property<string>("Prefixo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Data.Core.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BedId");

                    b.Property<int>("DoorNumber");

                    b.Property<int>("FloorNumber");

                    b.Property<string>("RoomDescription")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<int>("RoomStateId");

                    b.Property<int>("RoomTypeId");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.HasIndex("RoomStateId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Data.Core.Model.RoomBed", b =>
                {
                    b.Property<int>("RoomId");

                    b.Property<int>("BedId");

                    b.HasKey("RoomId", "BedId");

                    b.HasIndex("BedId");

                    b.ToTable("RoomBed");
                });

            modelBuilder.Entity("Data.Core.Model.RoomState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("RoomStates");
                });

            modelBuilder.Entity("Data.Core.Model.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("Data.Core.Model.Accommodation", b =>
                {
                    b.HasOne("Data.Core.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Core.Model.Bed", b =>
                {
                    b.HasOne("Data.Core.Model.Accommodation")
                        .WithMany("Beds")
                        .HasForeignKey("AccommodationId");
                });

            modelBuilder.Entity("Data.Core.Model.Room", b =>
                {
                    b.HasOne("Data.Core.Model.Bed")
                        .WithMany("Rooms")
                        .HasForeignKey("BedId");

                    b.HasOne("Data.Core.Model.RoomState", "RoomState")
                        .WithMany()
                        .HasForeignKey("RoomStateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Core.Model.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Data.Core.Model.RoomBed", b =>
                {
                    b.HasOne("Data.Core.Model.Bed", "Bed")
                        .WithMany()
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Core.Model.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
